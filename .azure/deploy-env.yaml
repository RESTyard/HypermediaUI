parameters:
  - name: environment
  - name: project
  - name: product
  - name: region
    default: 'eu-central-1'
  - name: apiStage
    default: 'v1'

steps:
  - task: SystemsManagerGetParameter@1
    displayName: 'SSMGet /${{parameters.environment}}/${{parameters.project}}/frontends/${{parameters.product}}/bucket as bucketName'
    inputs:
      awsCredentials: 'AWSDeploymentServiceConnection'
      regionName: '${{ parameters.region }}'
      readMode: 'single'
      parameterName: '/${{parameters.environment}}/${{parameters.project}}/frontends/${{parameters.product}}/bucket'
      singleNameTransform: 'custom'
      customVariableName: 'bucketName'
  - task: SystemsManagerGetParameter@1
    displayName: 'SSMGet /${{parameters.environment}}/${{parameters.project}}/frontends/${{parameters.product}}/distributionId as distributionId'
    inputs:
      awsCredentials: 'AWSDeploymentServiceConnection'
      regionName: '${{ parameters.region }}'
      readMode: 'single'
      parameterName: '/${{parameters.environment}}/${{parameters.project}}/frontends/${{parameters.product}}/distributionId'
      singleNameTransform: 'custom'
      customVariableName: 'distributionId'
  - task: AWSCLI@1
    displayName: 'Deploy to s3 bucket'
    inputs:
      awsCredentials: 'AWSAmplifyServiceConnection'
      regionName: '${{ parameters.region }}'
      awsCommand: 's3'
      awsSubCommand: 'sync'
      awsArguments: '$(Agent.BuildDirectory)/bundles-${{ parameters.environment }} s3://$(bucketName) --delete'
  - task: AWSCLI@1
    displayName: 'Create Cache Invalidation'
    inputs:
      awsCredentials: 'AWSAmplifyServiceConnection'
      regionName: '${{ parameters.region }}'
      awsCommand: 'cloudfront'
      awsSubCommand: 'create-invalidation'
      awsArguments: '--distribution-id $(distributionId) --paths "/*"'
